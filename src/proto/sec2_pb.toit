// Code generated by protoc-gen-toit. DO NOT EDIT.
// source: sec2.proto

import protobuf as _protobuf
import core as _core
import .constants_pb as _constants

// ENUM START: Sec2MsgType
Sec2MsgType_S2Session_Command0/int/*enum<Sec2MsgType>*/ ::= 0
Sec2MsgType_S2Session_Response0/int/*enum<Sec2MsgType>*/ ::= 1
Sec2MsgType_S2Session_Command1/int/*enum<Sec2MsgType>*/ ::= 2
Sec2MsgType_S2Session_Response1/int/*enum<Sec2MsgType>*/ ::= 3
// ENUM END: .Sec2MsgType

// MESSAGE START: .S2SessionCmd0
class S2SessionCmd0 extends _protobuf.Message:
  client_username/ByteArray := ByteArray 0
  client_pubkey/ByteArray := ByteArray 0

  constructor
      --client_username/ByteArray?=null
      --client_pubkey/ByteArray?=null:
    if client_username != null:
      this.client_username = client_username
    if client_pubkey != null:
      this.client_pubkey = client_pubkey

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        client_username = r.read_primitive _protobuf.PROTOBUF_TYPE_BYTES
      r.read_field 2:
        client_pubkey = r.read_primitive _protobuf.PROTOBUF_TYPE_BYTES

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    w.write_primitive _protobuf.PROTOBUF_TYPE_BYTES client_username --as_field=1
    w.write_primitive _protobuf.PROTOBUF_TYPE_BYTES client_pubkey --as_field=2

  num_fields_set -> int:
    return (client_username.is_empty ? 0 : 1)
      + (client_pubkey.is_empty ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BYTES client_username --as_field=1)
      + (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BYTES client_pubkey --as_field=2)

// MESSAGE END: .S2SessionCmd0

// MESSAGE START: .S2SessionResp0
class S2SessionResp0 extends _protobuf.Message:
  status/int/*enum<_constants.Status>*/ := 0
  device_pubkey/ByteArray := ByteArray 0
  device_salt/ByteArray := ByteArray 0

  constructor
      --status/int?/*enum<_constants.Status>?*/=null
      --device_pubkey/ByteArray?=null
      --device_salt/ByteArray?=null:
    if status != null:
      this.status = status
    if device_pubkey != null:
      this.device_pubkey = device_pubkey
    if device_salt != null:
      this.device_salt = device_salt

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        status = r.read_primitive _protobuf.PROTOBUF_TYPE_ENUM
      r.read_field 2:
        device_pubkey = r.read_primitive _protobuf.PROTOBUF_TYPE_BYTES
      r.read_field 3:
        device_salt = r.read_primitive _protobuf.PROTOBUF_TYPE_BYTES

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    w.write_primitive _protobuf.PROTOBUF_TYPE_ENUM status --as_field=1
    w.write_primitive _protobuf.PROTOBUF_TYPE_BYTES device_pubkey --as_field=2
    w.write_primitive _protobuf.PROTOBUF_TYPE_BYTES device_salt --as_field=3

  num_fields_set -> int:
    return (status == 0 ? 0 : 1)
      + (device_pubkey.is_empty ? 0 : 1)
      + (device_salt.is_empty ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_ENUM status --as_field=1)
      + (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BYTES device_pubkey --as_field=2)
      + (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BYTES device_salt --as_field=3)

// MESSAGE END: .S2SessionResp0

// MESSAGE START: .S2SessionCmd1
class S2SessionCmd1 extends _protobuf.Message:
  client_proof/ByteArray := ByteArray 0

  constructor
      --client_proof/ByteArray?=null:
    if client_proof != null:
      this.client_proof = client_proof

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        client_proof = r.read_primitive _protobuf.PROTOBUF_TYPE_BYTES

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    w.write_primitive _protobuf.PROTOBUF_TYPE_BYTES client_proof --as_field=1

  num_fields_set -> int:
    return (client_proof.is_empty ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BYTES client_proof --as_field=1)

// MESSAGE END: .S2SessionCmd1

// MESSAGE START: .S2SessionResp1
class S2SessionResp1 extends _protobuf.Message:
  status/int/*enum<_constants.Status>*/ := 0
  device_proof/ByteArray := ByteArray 0
  device_nonce/ByteArray := ByteArray 0

  constructor
      --status/int?/*enum<_constants.Status>?*/=null
      --device_proof/ByteArray?=null
      --device_nonce/ByteArray?=null:
    if status != null:
      this.status = status
    if device_proof != null:
      this.device_proof = device_proof
    if device_nonce != null:
      this.device_nonce = device_nonce

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        status = r.read_primitive _protobuf.PROTOBUF_TYPE_ENUM
      r.read_field 2:
        device_proof = r.read_primitive _protobuf.PROTOBUF_TYPE_BYTES
      r.read_field 3:
        device_nonce = r.read_primitive _protobuf.PROTOBUF_TYPE_BYTES

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    w.write_primitive _protobuf.PROTOBUF_TYPE_ENUM status --as_field=1
    w.write_primitive _protobuf.PROTOBUF_TYPE_BYTES device_proof --as_field=2
    w.write_primitive _protobuf.PROTOBUF_TYPE_BYTES device_nonce --as_field=3

  num_fields_set -> int:
    return (status == 0 ? 0 : 1)
      + (device_proof.is_empty ? 0 : 1)
      + (device_nonce.is_empty ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_ENUM status --as_field=1)
      + (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BYTES device_proof --as_field=2)
      + (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_BYTES device_nonce --as_field=3)

// MESSAGE END: .S2SessionResp1

// MESSAGE START: .Sec2Payload
class Sec2Payload extends _protobuf.Message:
  // ONEOF START: .Sec2Payload.payload
  payload_ := null
  payload_oneof_case_/int? := null

  payload_oneof_clear -> none:
    payload_ = null
    payload_oneof_case_ = null

  static PAYLOAD_SC0/int ::= 20
  static PAYLOAD_SR0/int ::= 21
  static PAYLOAD_SC1/int ::= 22
  static PAYLOAD_SR1/int ::= 23

  payload_oneof_case -> int?:
    return payload_oneof_case_

  payload_sc0 -> S2SessionCmd0:
    return payload_

  payload_sc0= payload/S2SessionCmd0 -> none:
    payload_ = payload
    payload_oneof_case_ = PAYLOAD_SC0

  payload_sr0 -> S2SessionResp0:
    return payload_

  payload_sr0= payload/S2SessionResp0 -> none:
    payload_ = payload
    payload_oneof_case_ = PAYLOAD_SR0

  payload_sc1 -> S2SessionCmd1:
    return payload_

  payload_sc1= payload/S2SessionCmd1 -> none:
    payload_ = payload
    payload_oneof_case_ = PAYLOAD_SC1

  payload_sr1 -> S2SessionResp1:
    return payload_

  payload_sr1= payload/S2SessionResp1 -> none:
    payload_ = payload
    payload_oneof_case_ = PAYLOAD_SR1

  // ONEOF END: .Sec2Payload.payload
  msg/int/*enum<Sec2MsgType>*/ := 0

  constructor
      --msg/int?/*enum<Sec2MsgType>?*/=null
      --payload_sc0/S2SessionCmd0?=null
      --payload_sr0/S2SessionResp0?=null
      --payload_sc1/S2SessionCmd1?=null
      --payload_sr1/S2SessionResp1?=null:
    if msg != null:
      this.msg = msg
    if payload_sc0 != null:
      this.payload_sc0 = payload_sc0
    if payload_sr0 != null:
      this.payload_sr0 = payload_sr0
    if payload_sc1 != null:
      this.payload_sc1 = payload_sc1
    if payload_sr1 != null:
      this.payload_sr1 = payload_sr1

  constructor.deserialize r/_protobuf.Reader:
    r.read_message:
      r.read_field 1:
        msg = r.read_primitive _protobuf.PROTOBUF_TYPE_ENUM
      r.read_field 20:
        payload_sc0 = S2SessionCmd0.deserialize r
      r.read_field 21:
        payload_sr0 = S2SessionResp0.deserialize r
      r.read_field 22:
        payload_sc1 = S2SessionCmd1.deserialize r
      r.read_field 23:
        payload_sr1 = S2SessionResp1.deserialize r

  serialize w/_protobuf.Writer --as_field/int?=null --oneof/bool=false -> none:
    w.write_message_header this --as_field=as_field --oneof=oneof
    w.write_primitive _protobuf.PROTOBUF_TYPE_ENUM msg --as_field=1
    if payload_oneof_case_ == PAYLOAD_SC0:
      payload_.serialize w --as_field=PAYLOAD_SC0 --oneof
    if payload_oneof_case_ == PAYLOAD_SR0:
      payload_.serialize w --as_field=PAYLOAD_SR0 --oneof
    if payload_oneof_case_ == PAYLOAD_SC1:
      payload_.serialize w --as_field=PAYLOAD_SC1 --oneof
    if payload_oneof_case_ == PAYLOAD_SR1:
      payload_.serialize w --as_field=PAYLOAD_SR1 --oneof

  num_fields_set -> int:
    return (payload_oneof_case_ == null ? 0 : 1)
      + (msg == 0 ? 0 : 1)

  protobuf_size -> int:
    return (_protobuf.size_primitive _protobuf.PROTOBUF_TYPE_ENUM msg --as_field=1)
      + (payload_oneof_case_ == PAYLOAD_SC0 ? (_protobuf.size_embedded_message (payload_sc0.protobuf_size) --as_field=20) : 0)
      + (payload_oneof_case_ == PAYLOAD_SR0 ? (_protobuf.size_embedded_message (payload_sr0.protobuf_size) --as_field=21) : 0)
      + (payload_oneof_case_ == PAYLOAD_SC1 ? (_protobuf.size_embedded_message (payload_sc1.protobuf_size) --as_field=22) : 0)
      + (payload_oneof_case_ == PAYLOAD_SR1 ? (_protobuf.size_embedded_message (payload_sr1.protobuf_size) --as_field=23) : 0)

// MESSAGE END: .Sec2Payload

